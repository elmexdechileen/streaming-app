services:
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:28081
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "28081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:28081

  flink:
    container_name: flink
    build: ./flink
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - FLINK_PLUGINS_DIR=/opt/flink/lib
    depends_on:
      - kafka

  taskmanager:
    container_name: taskmanager
    build: ./flink
    depends_on:
      - flink
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink 

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: flink
      POSTGRES_PASSWORD: postgres

  control-center:
    container_name: control-center
    image: confluentinc/cp-enterprise-control-center:7.0.1
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: ''
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_CONNECT_CLUSTER: ''
    depends_on:
      - kafka

  mocker-service:
    container_name: mocker-service
    build: ./mock-service
    ports:
      - "5000:5000"

  event-producer:
    container_name: event-producer
    build: ./event-producer
    env_file:
      - example.env
    depends_on:
      - kafka
      - mocker-service

  processor:
    container_name: processor
    build: ./processor
    volumes:
      - ./processor/app/main.py:/app/main.py
    env_file:
      - example.env
    depends_on:
      - kafka
      - mocker-service
      - postgres

  sqlpad:
    container_name: sqlpad
    image: sqlpad/sqlpad:latest
    ports:
      - "3000:3000"
    environment:
      SQLPAD_ALLOW_ANONYMOUS: true
      SQLPAD_ADMIN: 'admin@sqlpad.com'
      SQLPAD_ADMIN_PASSWORD: 'admin'
      SQLPAD_CONNECTIONS__pgdemo__name: Flink data
      SQLPAD_CONNECTIONS__pgdemo__driver: postgres
      SQLPAD_CONNECTIONS__pgdemo__host: postgres
      SQLPAD_CONNECTIONS__pgdemo__database: postgres
      SQLPAD_CONNECTIONS__pgdemo__username: flink
      SQLPAD_CONNECTIONS__pgdemo__password: postgres
      SQLPAD_CONNECTIONS__pgdemo__multiStatementTransactionEnabled: 'true'
      SQLPAD_CONNECTIONS__pgdemo__idleTimeoutSeconds: 86400
    depends_on:
      - postgres